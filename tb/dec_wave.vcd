$date
	Sat Jun 19 14:43:53 2021
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end
$scope module stream_cipher_tb_enc $end
$var reg 1 ! clk $end
$var reg 1 " rst_n $end
$var reg 1 # din_valid $end
$var reg 8 $ txt_in_char [7:0] $end
$var reg 8 % symmetric_key [7:0] $end
$var wire 1 & txt_out_char [7] $end
$var wire 1 ' txt_out_char [6] $end
$var wire 1 ( txt_out_char [5] $end
$var wire 1 ) txt_out_char [4] $end
$var wire 1 * txt_out_char [3] $end
$var wire 1 + txt_out_char [2] $end
$var wire 1 , txt_out_char [1] $end
$var wire 1 - txt_out_char [0] $end
$var wire 1 . dout_ready $end
$scope module DECIPHER $end
$var reg 2 / star [1:0] $end
$var reg 8 0 txt_in [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0 !
b0 "
bx #
0.
bx $
bx %
b0 0
b0 /
0&
0'
0(
0)
0*
0+
0,
0-
b0 /
b0 0
0.
0&
0'
0(
0)
0*
0+
0,
0-
#5
b1 !
#10
b0 !
#13
b1 "
#15
b1 !
b10100001 $
b10010 %
b1 /
#17
b1 #
#20
b0 !
#25
b1 !
b11000 $
b10 /
b10100001 0
#30
b0 !
#35
b1 !
b10010110 $
b11000 0
1.
1'
1(
1*
#40
b0 !
#45
b1 !
b110101 $
b10010110 0
0*
1+
1-
#50
b0 !
#55
b1 !
b101000 $
b110101 0
1*
0-
#60
b0 !
#65
b1 !
b11010000 $
b101000 0
#70
b0 !
#75
b1 !
b11011010 $
b11010000 0
1,
1-
#80
b0 !
#85
b1 !
b10111011 $
b11011010 0
0'
0*
0+
0,
0-
#90
b0 !
#95
b1 !
b11010000 $
b10111011 0
1'
1)
1+
1,
1-
#100
b0 !
#105
b1 !
b11000011 $
b11010000 0
0)
1*
#110
b0 !
#115
b1 !
b11111000 $
b11000011 0
1)
0*
0+
0-
#120
b0 !
#125
b1 !
b10000101 $
b11111000 0
0)
1*
1+
0,
#130
b0 !
#135
b1 !
b1111000 $
b10000101 0
0*
#140
b0 !
#145
b1 !
b0 #
b1111000 0
0'
0+
1-
#150
b0 !
#155
b1 !
b11 /
b0 0
0(
1*
1,
0-
#160
b0 !
#165
b1 !
0.
#170
b0 !
#175
b1 !
