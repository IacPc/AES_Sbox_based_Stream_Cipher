|aes_sbox_stream_cipher
clk => txt_out_char[0]~reg0.CLK
clk => txt_out_char[1]~reg0.CLK
clk => txt_out_char[2]~reg0.CLK
clk => txt_out_char[3]~reg0.CLK
clk => txt_out_char[4]~reg0.CLK
clk => txt_out_char[5]~reg0.CLK
clk => txt_out_char[6]~reg0.CLK
clk => txt_out_char[7]~reg0.CLK
clk => counter_out[0].CLK
clk => counter_out[1].CLK
clk => counter_out[2].CLK
clk => counter_out[3].CLK
clk => counter_out[4].CLK
clk => counter_out[5].CLK
clk => counter_out[6].CLK
clk => counter_out[7].CLK
clk => txt_in[0].CLK
clk => txt_in[1].CLK
clk => txt_in[2].CLK
clk => txt_in[3].CLK
clk => txt_in[4].CLK
clk => txt_in[5].CLK
clk => txt_in[6].CLK
clk => txt_in[7].CLK
clk => dout_ready[0]~reg0.CLK
clk => star~3.DATAIN
rst_n => txt_out_char[0]~reg0.ACLR
rst_n => txt_out_char[1]~reg0.ACLR
rst_n => txt_out_char[2]~reg0.ACLR
rst_n => txt_out_char[3]~reg0.ACLR
rst_n => txt_out_char[4]~reg0.ACLR
rst_n => txt_out_char[5]~reg0.ACLR
rst_n => txt_out_char[6]~reg0.ACLR
rst_n => txt_out_char[7]~reg0.ACLR
rst_n => counter_out[0].ACLR
rst_n => counter_out[1].ACLR
rst_n => counter_out[2].ACLR
rst_n => counter_out[3].ACLR
rst_n => counter_out[4].ACLR
rst_n => counter_out[5].ACLR
rst_n => counter_out[6].ACLR
rst_n => counter_out[7].ACLR
rst_n => txt_in[0].ACLR
rst_n => txt_in[1].ACLR
rst_n => txt_in[2].ACLR
rst_n => txt_in[3].ACLR
rst_n => txt_in[4].ACLR
rst_n => txt_in[5].ACLR
rst_n => txt_in[6].ACLR
rst_n => txt_in[7].ACLR
rst_n => dout_ready[0]~reg0.ACLR
rst_n => star~5.DATAIN
din_valid => txt_in.OUTPUTSELECT
din_valid => txt_in.OUTPUTSELECT
din_valid => txt_in.OUTPUTSELECT
din_valid => txt_in.OUTPUTSELECT
din_valid => txt_in.OUTPUTSELECT
din_valid => txt_in.OUTPUTSELECT
din_valid => txt_in.OUTPUTSELECT
din_valid => txt_in.OUTPUTSELECT
din_valid => counter_out.OUTPUTSELECT
din_valid => counter_out.OUTPUTSELECT
din_valid => counter_out.OUTPUTSELECT
din_valid => counter_out.OUTPUTSELECT
din_valid => counter_out.OUTPUTSELECT
din_valid => counter_out.OUTPUTSELECT
din_valid => counter_out.OUTPUTSELECT
din_valid => counter_out.OUTPUTSELECT
din_valid => Selector1.IN1
din_valid => Selector0.IN2
din_valid => Selector2.IN1
simmetric_key[0] => counter_out.DATAB
simmetric_key[1] => counter_out.DATAB
simmetric_key[2] => counter_out.DATAB
simmetric_key[3] => counter_out.DATAB
simmetric_key[4] => counter_out.DATAB
simmetric_key[5] => counter_out.DATAB
simmetric_key[6] => counter_out.DATAB
simmetric_key[7] => counter_out.DATAB
txt_in_char[0] => txt_in.DATAB
txt_in_char[1] => txt_in.DATAB
txt_in_char[2] => txt_in.DATAB
txt_in_char[3] => txt_in.DATAB
txt_in_char[4] => txt_in.DATAB
txt_in_char[5] => txt_in.DATAB
txt_in_char[6] => txt_in.DATAB
txt_in_char[7] => txt_in.DATAB
txt_out_char[0] << txt_out_char[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
txt_out_char[1] << txt_out_char[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
txt_out_char[2] << txt_out_char[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
txt_out_char[3] << txt_out_char[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
txt_out_char[4] << txt_out_char[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
txt_out_char[5] << txt_out_char[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
txt_out_char[6] << txt_out_char[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
txt_out_char[7] << txt_out_char[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dout_ready[0] << dout_ready[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE


